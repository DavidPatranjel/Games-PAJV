//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/PlayerControlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControlls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControlls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControlls"",
    ""maps"": [
        {
            ""name"": ""Controlls"",
            ""id"": ""f176da38-9bf5-4a71-9406-961e670322e1"",
            ""actions"": [
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""fb9bc244-0620-4f7b-bdd9-908fbe5a953b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MassHeal"",
                    ""type"": ""Button"",
                    ""id"": ""335078df-6152-4158-8bce-d8b1db944813"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowR"",
                    ""type"": ""Button"",
                    ""id"": ""34dcc502-e323-44d8-a4d0-2fa04b9760cd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowL"",
                    ""type"": ""Button"",
                    ""id"": ""38e49511-5ec2-4b4d-80b1-015f8eaa73a9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""ef76b9d0-e56a-44b3-b91c-9f45c5f4780c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MassAttack"",
                    ""type"": ""Button"",
                    ""id"": ""874b0254-aac2-47ed-a98a-91daff639cee"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""b73b019e-a6d4-442a-9be0-4ba6466e75be"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""78e842f6-dedd-460a-a115-b6bd9f14b99d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fe3d3903-7475-44a4-a085-c7a73539c16a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d77c27c-877e-4349-8434-afe09c4e1d1c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MassHeal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a1efd53-4207-47a4-b7f1-51ad35c8ea24"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a3d125b-9289-468b-a294-2db5c4ed25c2"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89c09291-75c9-4c7f-b6e7-b472e15624d9"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22199ebe-2a82-4f35-ab10-c8ef83b57a13"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MassAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae72c725-2a43-4a3b-ad9b-dace92dde95c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3516c33-879b-42f4-b2af-0ec664234305"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Controlls
        m_Controlls = asset.FindActionMap("Controlls", throwIfNotFound: true);
        m_Controlls_Exit = m_Controlls.FindAction("Exit", throwIfNotFound: true);
        m_Controlls_MassHeal = m_Controlls.FindAction("MassHeal", throwIfNotFound: true);
        m_Controlls_ArrowR = m_Controlls.FindAction("ArrowR", throwIfNotFound: true);
        m_Controlls_ArrowL = m_Controlls.FindAction("ArrowL", throwIfNotFound: true);
        m_Controlls_Select = m_Controlls.FindAction("Select", throwIfNotFound: true);
        m_Controlls_MassAttack = m_Controlls.FindAction("MassAttack", throwIfNotFound: true);
        m_Controlls_Move = m_Controlls.FindAction("Move", throwIfNotFound: true);
        m_Controlls_Attack = m_Controlls.FindAction("Attack", throwIfNotFound: true);
    }

    ~@PlayerControlls()
    {
        UnityEngine.Debug.Assert(!m_Controlls.enabled, "This will cause a leak and performance issues, PlayerControlls.Controlls.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controlls
    private readonly InputActionMap m_Controlls;
    private List<IControllsActions> m_ControllsActionsCallbackInterfaces = new List<IControllsActions>();
    private readonly InputAction m_Controlls_Exit;
    private readonly InputAction m_Controlls_MassHeal;
    private readonly InputAction m_Controlls_ArrowR;
    private readonly InputAction m_Controlls_ArrowL;
    private readonly InputAction m_Controlls_Select;
    private readonly InputAction m_Controlls_MassAttack;
    private readonly InputAction m_Controlls_Move;
    private readonly InputAction m_Controlls_Attack;
    public struct ControllsActions
    {
        private @PlayerControlls m_Wrapper;
        public ControllsActions(@PlayerControlls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Exit => m_Wrapper.m_Controlls_Exit;
        public InputAction @MassHeal => m_Wrapper.m_Controlls_MassHeal;
        public InputAction @ArrowR => m_Wrapper.m_Controlls_ArrowR;
        public InputAction @ArrowL => m_Wrapper.m_Controlls_ArrowL;
        public InputAction @Select => m_Wrapper.m_Controlls_Select;
        public InputAction @MassAttack => m_Wrapper.m_Controlls_MassAttack;
        public InputAction @Move => m_Wrapper.m_Controlls_Move;
        public InputAction @Attack => m_Wrapper.m_Controlls_Attack;
        public InputActionMap Get() { return m_Wrapper.m_Controlls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllsActions set) { return set.Get(); }
        public void AddCallbacks(IControllsActions instance)
        {
            if (instance == null || m_Wrapper.m_ControllsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControllsActionsCallbackInterfaces.Add(instance);
            @Exit.started += instance.OnExit;
            @Exit.performed += instance.OnExit;
            @Exit.canceled += instance.OnExit;
            @MassHeal.started += instance.OnMassHeal;
            @MassHeal.performed += instance.OnMassHeal;
            @MassHeal.canceled += instance.OnMassHeal;
            @ArrowR.started += instance.OnArrowR;
            @ArrowR.performed += instance.OnArrowR;
            @ArrowR.canceled += instance.OnArrowR;
            @ArrowL.started += instance.OnArrowL;
            @ArrowL.performed += instance.OnArrowL;
            @ArrowL.canceled += instance.OnArrowL;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @MassAttack.started += instance.OnMassAttack;
            @MassAttack.performed += instance.OnMassAttack;
            @MassAttack.canceled += instance.OnMassAttack;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
        }

        private void UnregisterCallbacks(IControllsActions instance)
        {
            @Exit.started -= instance.OnExit;
            @Exit.performed -= instance.OnExit;
            @Exit.canceled -= instance.OnExit;
            @MassHeal.started -= instance.OnMassHeal;
            @MassHeal.performed -= instance.OnMassHeal;
            @MassHeal.canceled -= instance.OnMassHeal;
            @ArrowR.started -= instance.OnArrowR;
            @ArrowR.performed -= instance.OnArrowR;
            @ArrowR.canceled -= instance.OnArrowR;
            @ArrowL.started -= instance.OnArrowL;
            @ArrowL.performed -= instance.OnArrowL;
            @ArrowL.canceled -= instance.OnArrowL;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @MassAttack.started -= instance.OnMassAttack;
            @MassAttack.performed -= instance.OnMassAttack;
            @MassAttack.canceled -= instance.OnMassAttack;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
        }

        public void RemoveCallbacks(IControllsActions instance)
        {
            if (m_Wrapper.m_ControllsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IControllsActions instance)
        {
            foreach (var item in m_Wrapper.m_ControllsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControllsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ControllsActions @Controlls => new ControllsActions(this);
    public interface IControllsActions
    {
        void OnExit(InputAction.CallbackContext context);
        void OnMassHeal(InputAction.CallbackContext context);
        void OnArrowR(InputAction.CallbackContext context);
        void OnArrowL(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnMassAttack(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
    }
}
